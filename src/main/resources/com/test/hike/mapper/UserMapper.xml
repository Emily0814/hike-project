<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.test.hike.mapper.UserMapper">
	<resultMap id="userInfoDTOResultMap" type="com.test.hike.dto.UserInfoDTO">
	    <result property="userId" column="USER_ID" />
	    <result property="locationId" column="LOCATION_ID" />
	    <result property="email" column="EMAIL" />
	    <result property="password" column="PASSWORD" />
	    <result property="nickname" column="NICKNAME" />
	    <result property="name" column="NAME" />
	    <result property="gender" column="GENDER" />
	    <result property="birthday" column="BIRTHDAY" />
	    <result property="intro" column="INTRO" />
	    <result property="profileImage" column="PROFILE_IMAGE" />
	    <result property="createDate" column="CREATE_DATE" />
	</resultMap>
     <!-- 로그인 체크 -->
    <select id="loginCheck" parameterType="com.test.hike.dto.UserInfoDTO" 
            resultType="com.test.hike.dto.UserInfoDTO">
        SELECT * 
        FROM UserInfo
        WHERE email = #{email} 
        AND password = #{password}
    </select>
    
	<!-- 이메일 중복 체크 -->
	<select id="isEmailExists" parameterType="string" resultType="int">
	    SELECT CASE 
	           WHEN COUNT(*) > 0 THEN 1 
	           ELSE 0 
	           END 
	    FROM UserInfo 
	    WHERE email = #{email}
	</select>
    
    <!-- 회원 등록 -->
    <insert id="insertUser" parameterType="com.test.hike.dto.UserInfoDTO">
        INSERT INTO UserInfo (
            email, password, name, nickname,
            gender, birthday, location_id,
            intro, profile_image, create_date
        ) VALUES (
            #{email}, #{password}, #{name}, #{nickname},
            #{gender}, #{birthday}, #{location_id},
            #{intro}, #{profile_image}, #{create_date}
        )
    </insert>
    
    <!-- 프로필 이미지 업데이트 -->
    <update id="updateProfileImage" parameterType="com.test.hike.dto.UserInfoDTO">
	    UPDATE UserInfo
	    SET profile_image = #{profileImage}
	    WHERE user_id = #{userId}
	</update>
    
    <!-- 활동 지역 목록 조회 -->
    <select id="getAllLocations" resultType="com.test.hike.dto.LocationDTO">
        SELECT 
            location_id AS location_id,
            name 
        FROM LOCATION
        ORDER BY location_id
    </select>
</mapper>